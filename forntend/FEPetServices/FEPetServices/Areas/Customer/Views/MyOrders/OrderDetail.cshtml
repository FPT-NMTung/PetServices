﻿@using FEPetServices.Form.OrdersForm;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/css/toastNotification.css" rel="stylesheet" />
    <link href="~/css/orders/stylesheet.css" rel="stylesheet" />
    <link href="~/css/map.css" rel="stylesheet" />
    <link href="~/css/OrderDetail.css" rel="stylesheet" />
    <link href="~/css/orders/detail.css" rel="stylesheet" />
</head>
<body>
    <div class="card right-profile-card">
        <div class="card-header alert-primary">
            <div class="back-list" onclick="goBack()">
                <span><i class="fa-solid fa-chevron-left"></i></span>
                Trở lại
            </div>
            <div class="header-contents">
                <div class="header-content-code"> Mã đơn hàng : @Model.OrderId | </div>
                <div class="header-content-status">
                    @if (Model.OrderStatus.Trim() == "Confirmed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đã được xác nhận và trong giai đoạn xử lý</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Processing")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đang được thực hiện</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Placed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đang chờ xác nhận</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Completed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đã hoàn thành</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Cancelled")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng bị huỷ</span>
                    }
                </div>
            </div>
        </div>

        @if (Model.OrderStatus.Trim() != "Cancelled")
        {
            <section class="vh-25 p-1">
                <div class="container h-100">
                    <div class="row d-flex justify-content-center align-items-center h-100">
                        <div class="col-12">
                            <div class="card card-stepper text-black" style="border-radius: 16px;">
                                <div class="card-body" style="max-height: 90px;">
                                    <ul id="progressbar-2" class="d-flex justify-content-between mx-0 mt-0 mb-5 px-0 pt-0 pb-2">
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Placed" || Model.OrderStatus.Trim() == "Processing"
                                        || Model.OrderStatus.Trim() == "Confirmed" || Model.OrderStatus.Trim() == "Completed"
                                        ) {
                                    <text>active</text>
                                    } text-center" id="step1">
                                            <i class="fa-solid fa-receipt"></i>
                                        </li>
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Confirmed" || Model.OrderStatus.Trim() == "Processing"
                                        || Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    } text-center" id="step2">
                                            <i class="fa-solid fa-check"></i>
                                        </li>
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Processing" ||  Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    } text-center" id="step3">
                                            <i class="fa-solid fa-truck"></i>
                                        </li>
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    }  text-center" id="step4">
                                            <i class="fa-solid fa-download"></i>
                                        </li>
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                     }  text-end" id="step5">
                                            <i class="fa-regular fa-star"></i>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đang chờ xác nhận</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đã được xác nhận và trong giai đoạn xử lý</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đang được thực hiện</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đã hoàn thành</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đánh giá</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
        else if (Model.OrderStatus.Trim() == "Cancelled")
        {
            <div class="card-body cancelled-order" style="border-radius:0px">
                <p>Đơn hàng bị huỷ !!!</p>
            </div>
        }

        <div class="card-order-infomation">
            <div class="card-order-header">
                <p>Địa chỉ nhận hàng</p>
            </div>
            <div class="card-order-detail">
                <p>@Model.FullName</p>
                <p style="color:rgba(0, 0, 0, 0.6)">@Model.Phone</p>
                <p style="color:rgba(0, 0, 0, 0.6)">@Model.Province , @Model.District , @Model.Commune, @Model.Address</p>
            </div>
        </div>

        <div class="card-body" style="background-color:rgba(0, 0, 0, 0.03); border-radius:0px">
            <div class="tab-content" id="pills-tabContent">
                <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">

                    @*Start - Product Detail*@
                    @if (Model.OrderProductDetails != null && Model.OrderProductDetails.Count > 0)
                    {
                        <div class="content-details">
                            <p class="bold-text">Thông tin sản phẩm đã được đặt hàng</p>
                            @for (int i = 0; i < Model.OrderProductDetails.Count; i++)
                            {
                                var productDetail = Model.OrderProductDetails[i];
                                <div class="content-detail">
                                    <div class="product-info">
                                        <img src="@productDetail.Product.Picture" width="50" height="50" alt="Product Image">
                                        <div class="product-info-detail">
                                            <p style="max-width:450px">@productDetail.Product.ProductName</p>
                                            <p style="font-size:.8rem;"><span>x</span>@productDetail.Quantity</p>
                                        </div>
                                    </div>
                                    <p>@($"{(productDetail.Quantity * productDetail.Price):n0}".Replace(",", ".")) VNĐ</p>
                                </div>
                                @if ((productDetail.FeedbackStatus == null || productDetail.FeedbackStatus == false) && productDetail?.StatusOrderProduct?.Trim() == "Delivered")
                                {
                                    <div class="btn-content-detail">
                                        <button class="btn btn-outline-primary" onclick="openPopupProduct('@productDetail.Product.Picture', '@productDetail.Product.ProductName', '@productDetail.Quantity', '@productDetail.ProductId', '@Model.UserInfoId', '@Model.OrderId', '@productDetail.FeedbackStatus')">Đánh giá</button>
                                    </div>
                                }
                                @if (i == Model.OrderProductDetails.Count - 1)
                                {
                                    <div class=" status-content-detail">
                                        @if (productDetail?.StatusOrderProduct?.Trim() == "Placed")
                                        {
                                            <span class="badge badge-info">Sản phẩm đang chờ xác nhận</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Packaging")
                                        {
                                            <span class="badge badge-info">Đóng gói sản phẩm</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Shipped")
                                        {
                                            <span class="badge badge-info">Đơn hàng đang được vận chuyển</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Delivered")
                                        {
                                            <span class="badge badge-info">Đơn hàng được giao đến khách hàng</span>
                                        }
                                    </div>
                                }
                            }
                        </div>
                    }
                    @*End - Product Detail*@

                    @*Start - Service Detail*@
                    @if (Model.BookingServicesDetails != null && Model.BookingServicesDetails.Count > 0)
                    {
                        <div class="content-details">
                            <p class="bold-text">Thông tin dịch vụ đã được đặt hàng</p>
                            @foreach (var serviceDetail in Model.BookingServicesDetails)
                            {
                                <div class="content-detail">
                                    <div class="service-info">
                                        <img src="@serviceDetail.Service.Picture" width="50" height="50" alt="Service Image">
                                        <div class="service-info-detail">
                                            <p style="max-width:450px">@serviceDetail.Service.ServiceName</p>
                                            <p style="font-size:.8rem;"><span>Cân nặng thú cưng: </span>@serviceDetail.Weight Kg</p>
                                            <div>
                                                <p style="font-size:.8rem; cursor: pointer; color:blue" class="map-button clickable"
                                                   data-lat="@serviceDetail?.PartnerInfo?.Lat"
                                                   data-lng="@serviceDetail?.PartnerInfo?.Lng"
                                                   data-my-lat=""
                                                   data-my-lng="">
                                                    Đối tác : @serviceDetail?.PartnerInfo?.FirstName @serviceDetail?.PartnerInfo?.LastName - @serviceDetail?.PartnerInfoId
                                                </p>
                                                <div style="display:flex; align-items:center">
                                                    <p style="font-size:.8rem;">Đánh giá về nhân viên của chúng tôi :  </p>
                                                    @{
                                                        var partnerName = serviceDetail?.PartnerInfo?.FirstName + " " + serviceDetail?.PartnerInfo?.LastName + " - " + serviceDetail?.PartnerInfoId;

                                                        if ((serviceDetail.FeedbackPartnerStatus == null || serviceDetail.FeedbackPartnerStatus == false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                                        {
                                                            <div style="margin-bottom:0px; margin-left:.2rem"  class="btn-content-detail">
                                                                <button class="btn btn-outline-primary" onclick="openPopupPartner('@serviceDetail?.PartnerInfo.ImagePartner', '@partnerName', '@serviceDetail.PartnerInfo.PartnerInfoId', '@serviceDetail.ServiceId', '@Model.UserInfoId', '@Model.OrderId')">Đánh giá</button>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="content-detail-time-service">
                                        <p style="font-size:.8rem;">Thời gian bắt đầu: @serviceDetail?.StartTime</p>
                                        <p style="font-size:.8rem;">Thời gian kêt thúc: @serviceDetail?.EndTime</p>
                                    </div>
                                    <p>@($"{(serviceDetail.PriceService):n0}".Replace(",", ".")) VNĐ</p>
                                </div>
                                <div class="status-content-detail">
                                    @if (@serviceDetail?.StatusOrderService.Trim() == "Placed")
                                    {
                                        <span class="badge badge-info">Dịch vụ đang chờ xác nhận</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Waiting")
                                    {
                                        <span class="badge badge-info">Dịch vụ đang chờ xử lý </span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Received")
                                    {
                                        <span class="badge badge-info">Dịch vụ được nhận bởi nhân viên</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Processing")
                                    {
                                        <span class="badge badge-info">Đang trong quá trình thực hiện</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Rejected")
                                    {
                                        <span class="badge badge-info">Bị huỷ bởi nhân viên bạn chọn</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "ReceivedDifficult")
                                    {
                                        <span class="badge badge-info">Dịch vụ được nhận bởi nhân viên khác</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                    {
                                        <span class="badge badge-info">Dịch vụ đã hoàn thành</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Cancelled")
                                    {
                                        <span class="badge badge-info">Dịch vụ bị huỷ</span>
                                    }
                                </div>
                                @if ((serviceDetail.FeedbackStatus == null || serviceDetail.FeedbackStatus == false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                {
                                    <div class="btn-content-detail">
                                        <button class="btn btn-outline-primary" onclick="openPopupService('@serviceDetail.Service.Picture', '@serviceDetail.Service.ServiceName', '@serviceDetail.Weight', '@serviceDetail.ServiceId', '@Model.UserInfoId', '@Model.OrderId')">Đánh giá</button>
                                    </div>
                                }
                            }
                        </div>
                    }
                    @*End - Service Detail*@

                    @*Start - Room Detail*@
                    @if (Model.BookingRoomDetails != null && Model.BookingRoomDetails.Count > 0)
                    {
                        <div class="content-details">
                            <p class="bold-text">Thông tin phòng đã được đặt hàng</p>
                            @foreach (var roomDetail in Model.BookingRoomDetails)
                            {
                                <div class="content-detail">
                                    <div class="room-info">
                                        <img src="@roomDetail.Room.Picture" width="50" height="50" alt="Room Image">
                                        <div class="room-info-detail">
                                            <p style="max-width:800px">@roomDetail.Room.RoomName</p>
                                            @foreach (var roomService in Model.BookingRoomServices)
                                            {
                                                <div class="room-info-detail-service">
                                                    <p style="font-size:.8rem;">Dịch vụ: @roomService.Service.ServiceName</p>
                                                    <p class="price-service-rooom" style="font-size:.8rem;">@($"{(roomService.PriceService):n0}".Replace(",", ".")) VNĐ</p>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="content-detail-time">
                                    <p style="font-size:.9rem;">Thời gian bắt đầu: @roomDetail.StartDate</p>
                                    <p style="font-size:.9rem;">Thời gian kêt thúc: @roomDetail.EndDate</p>
                                </div>
                                @if (roomDetail.FeedbackStatus == null || roomDetail.FeedbackStatus == false)
                                {
                                    <div class="btn-content-detail">
                                        <button class="btn btn-outline-primary" onclick="openPopupRoom('@roomDetail.Room.Picture', '@roomDetail.Room.RoomName', '@roomDetail.RoomId', '@Model.UserInfoId', '@Model.OrderId')">Đánh giá</button>
                                    </div>
                                }
                            }
                        </div>
                    }
                    @*End - Room Detail*@

                    <div class="headel-content">
                        <p>Tổng giá : </p>
                        <p>@(Model.TotalPrice.ToString("n0").Replace(",", ".")) VNĐ</p>
                    </div>
                    <div class="work-container-inner">
                        @if (Model != null && Model.TypePay != null && Model.TypePay.Trim() == "cash")
                        {
                            <p>Thanh toán trực tiếp</p>
                        }
                        @if (Model != null && Model.TypePay != null && Model.TypePay.Trim() == "vnpay")
                        {
                            <p>Thanh toán bằng hình thức chuyển khoản</p>
                        }
                        @if (!Model.StatusPayment)
                        {
                            <span class="badge badge-info">Chưa thanh toán</span>
                        }
                        else
                        {
                            <span class="badge badge-info">Đã thanh toán</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        @if (Model.OrderStatus.Trim() == "Cancelled")
        {
            <div class="card-body cancelled-order-footer" style="border-radius:0px">
                <div class="reason-order-heder">
                    <p style="font-size: 18px">Lý do : </p>
                </div>
                @foreach (var reasonOrder in Model.ReasonOrders)
                {
                    <div class="reason-order-content">
                        <p>Tiêu đề: @reasonOrder.ReasonOrderTitle</p>
                        <p>Mô tả: @reasonOrder.ReasonOrderDescription</p>
                        <p style="color:rgba(0, 0, 0, 0.69)">Thời gian :@reasonOrder.RejectTime</p>
                    </div>
                }
            </div>
        }
    </div>

    <div id="mapModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeMapModal()">&times;</span>
            <div id="map" style="width: 100%; height: 400px;"></div>
        </div>
        <div id="directionsPanel"></div>
    </div>

    <script src="~/js/map.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMF53NXGYhHFNQQcT87lhe0ieM3AkUjYM"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            updateConnectorWidth();
        });

        window.addEventListener("resize", function () {
            updateConnectorWidth();
        });

        function updateConnectorWidth() {
            var progressBar = document.getElementById("progressbar-2");
            var steps = progressBar.getElementsByTagName("li");

            for (var i = 0; i < steps.length - 1; i++) {
                var connector = document.createElement("div");
                connector.classList.add("connector");
                steps[i].appendChild(connector);

                var nextStepLeft = steps[i + 1].offsetLeft;
                var currentStepRight = steps[i].offsetLeft + steps[i].offsetWidth;

                var connectorWidth = nextStepLeft - currentStepRight;
                connector.style.width = connectorWidth + "px";
            }
        };

        function goBack() {
            window.history.go(-1);
        };

        @*Open Map*@
            $('.clickable').click(function () {
                var partnerLatitude = parseFloat($(this).data("lat"));
                var partnerLongitude = parseFloat($(this).data("lng"));
                var myLatitude = parseFloat($(this).data("my-lat"));
                var myLongitude = parseFloat($(this).data("my-lng"));

                if (isNaN(myLatitude) || isNaN(myLongitude)) {
                    // Nếu vị trí của bạn không được xác định trước đó, hãy lấy lại
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            myLatitude = position.coords.latitude;
                            myLongitude = position.coords.longitude;

                            // Lưu trữ vị trí của bạn để sử dụng cho các lần click sau
                            $(this).data("my-lat", myLatitude);
                            $(this).data("my-lng", myLongitude);

                            showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
                        }, function (error) {
                            console.error("Error getting current location:", error);
                        });
                    } else {
                        alert("Trình duyệt không hỗ trợ lấy vị trí.");
                    }
                } else {
                    showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
                }
            });

        $(".close").click(function () {
            closeMapModal();
        });

        $(window).click(function (event) {
            if (event.target.id === "mapModal") {
                closeMapModal();
            }
        });

        function showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude) {
            initMap(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
            openMapModal();
            calculateAndDisplayRoute(directionsService, directionsDisplay, { lat: myLatitude, lng: myLongitude }, { lat: partnerLatitude, lng: partnerLongitude });
        }

        function openMapModal() {
            $("#mapModal").css("display", "block");
        }

        function closeMapModal() {
            $("#mapModal").css("display", "none");
        }

        function initMap(latitude, longitude, myLatitude, myLongitude) {
            var directionsService = new google.maps.DirectionsService();
            var directionsDisplay = new google.maps.DirectionsRenderer();

            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: latitude, lng: longitude },
                zoom: 15
            });

            var marker = new google.maps.Marker({
                position: { lat: latitude, lng: longitude },
                map: map,
                title: 'Vị trí đối tác',
                icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
            });

            var myMarker = new google.maps.Marker({
                position: { lat: myLatitude, lng: myLongitude },
                map: map,
                title: 'Vị trí của tôi',
                icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
            });

            directionsDisplay.setMap(map);
            calculateAndDisplayRoute(directionsService, directionsDisplay, { lat: myLatitude, lng: myLongitude }, { lat: latitude, lng: longitude });
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay, start, end) {
            directionsService.route({
                origin: start,
                destination: end,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Không thể hiển thị tuyến đường do: ' + status);
                }
            });
        }
        @*End Map*@
    </script>
</body>
</html>
