<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <div class="container-xl px-4 mt-4">
        <hr class="mt-0 mb-4">
        <div class="row">
            <div class="col-xl-4">
                <div class="card mb-4 mb-xl-0">
                    <div class="card-header">Hình ảnh cá nhân</div>
                    <div class="card-body text-center">
                        @*Hình ảnh profile*@
                        <img class="img-account-profile rounded-circle mb-2" src="http://bootdey.com/img/Content/avatar/avatar1.png" alt="">
                        <!-- Profile picture help block-->
                        <div class="small font-italic text-muted mb-4">JPG or PNG no larger than 5 MB</div>
                        @* Uploat ảnh*@
                        <button class="btn btn-primary" type="button">Tải lên hình ảnh mới</button>
                    </div>
                </div>
            </div>
            <div class="col-xl-8">
                @*Thông tin người dùng*@
                <div class="card mb-4">
                    <div class="card-header">Thông tin người dùng</div>
                    <div class="card-body">
                        <form method="post" asp-controller="Infomation" asp-action="Index">
                            <div class="row gx-3 mb-3">
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputFirstName">Họ</label>
                                    <input class="form-control" name="FirstName" id="inputFirstName" type="text" placeholder="Nhập họ hoặc tên đệm của bạn" value="@Model?.UserInfo.FirstName">
                                </div>
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputLastName">Tên</label>
                                    <input class="form-control" name="LastName" id="inputLastName" type="text" placeholder="Nhập tên của bạn" value="@Model?.UserInfo.LastName">
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="small mb-1" for="inputEmailAddress">Email</label>
                                <input class="form-control" id="inputEmailAddress" type="email" placeholder="Enter your email address" value="@Model?.Email">
                            </div>

                            <div class="row gx-3 mb-3">
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputProvince">Tỉnh</label>
                                    <select class="form-control" id="provinceDropdown" onchange="loadDistricts()" name="Province">
                                        <option value="@Model?.UserInfo.Province" selected></option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputDistrict">Huyện/Thành Phố</label>
                                    <select class="form-control" id="districtDropdown" onchange="loadWards()" name="District">
                                        <option value="@Model?.UserInfo.District" selected>@Model?.UserInfo.District</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row gx-3 mb-3">
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputWard">Xã/Quận</label>
                                    <select class="form-control" id="wardDropdown" name="Commune">
                                        <option value="@Model?.UserInfo.Commune" selected>@Model?.UserInfo.Commune</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputAddress">Địa chỉ cụ thể</label>
                                    <input class="form-control" name="Address" id="inputAddress" type="text" placeholder="Nhập địa chỉ" value="@Model?.UserInfo.Address">
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="small mb-1" for="inputPhone">Số điện thoại </label>
                                <input class="form-control" name="Phone" id="inputPhone" type="text" placeholder="Nhập số điện thoại của bạn" value="@Model?.UserInfo.Phone">
                            </div>
                            <div class="mb-3">
                                <label class="small mb-1" for="inputDescriptions">Mô tả </label>
                                <textarea class="form-control" name="Descriptions" id="inputDesciptions" placeholder="Mô tả về bạn">@Model?.UserInfo.Descriptions</textarea>
                            </div>
                            <button class="btn btn-primary" type="submit">Lưu thay đổi</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Đổi mật khẩu</button>

     @*<script src="~/js/takeAddress.js"></script>*@

     <script>
        function loadDistricts() {
            var provinceDropdown = document.getElementById("provinceDropdown");
            var selectedProvince = provinceDropdown.value;
            var districtDropdown = document.getElementById("districtDropdown");
            var selectedDistrict = districtDropdown.value;

            fetch(`https://provinces.open-api.vn/api/p/${selectedProvince}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    var districts = data.districts;
                    var districtDropdown = document.getElementById("districtDropdown");
                    var wardDropdown = document.getElementById("wardDropdown");

                    // Clear existing options in district and ward dropdowns
                    districtDropdown.innerHTML = "";
                    wardDropdown.innerHTML = "";

                    // Add new district options
                    for (var i = 0; i < districts.length; i++) {
                        var option = document.createElement("option");
                        option.value = districts[i].code;
                        option.text = districts[i].name;
                        districtDropdown.appendChild(option);
                    }

                    // Trigger the change event on district dropdown to load wards
                    districtDropdown.dispatchEvent(new Event("change"));
                })
                .catch(error => {
                    console.error("Error:", error);
                });

            fetch(`https://provinces.open-api.vn/api/d/${selectedDistrict}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    var wards = data.wards;

                    // Clear existing options in ward dropdown
                    wardDropdown.innerHTML = "";

                    // Add new ward options
                    for (var i = 0; i < wards.length; i++) {
                        var option = document.createElement("option");
                        option.value = wards[i].code;
                        option.text = wards[i].name;
                        wardDropdown.appendChild(option);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        function loadWards() {
            var districtDropdown = document.getElementById("districtDropdown");
            var selectedDistrict = districtDropdown.value;
            var wardDropdown = document.getElementById("wardDropdown");

            if (selectedDistrict === "") {
                // Get the first district option
                var firstDistrictOption = districtDropdown.querySelector("option:not([value=''])");
                selectedDistrict = firstDistrictOption.value;
                firstDistrictOption.selected = true;
            }

            fetch(`https://provinces.open-api.vn/api/d/${selectedDistrict}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    var wards = data.wards;

                    // Clear existing options in ward dropdown
                    wardDropdown.innerHTML = "";

                    // Add new ward options
                    for (var i = 0; i < wards.length; i++) {
                        var option = document.createElement("option");
                        option.value = wards[i].code;
                        option.text = wards[i].name;
                        wardDropdown.appendChild(option);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        fetch("https://provinces.open-api.vn/api/p/")
            .then(response => response.json())
            .then(data => {
                var provinces = data;
                var provinceDropdown = document.getElementById("provinceDropdown");
                var selectedProvince = provinceDropdown.value;
                console.log(selectedProvince);

                if (selectedProvince === "") {
                    // Get the first district option
                    var firstProvinceOption = provinceDropdown.querySelector("option:not([value=''])");
                    selectedProvince = firstProvinceOption.value;
                    firstProvinceOption.selected = true;
                    console.log(selectedProvince);
                }
                // Add province options
                for (var i = 0; i < provinces.length; i++) {
                    var option = document.createElement("option");
                    option.value = provinces[i].code;
                    option.text = provinces[i].name;
                    provinceDropdown.appendChild(option);
                }

                // Trigger the change event on province dropdown to load districts
                provinceDropdown.dispatchEvent(new Event("change"));
            })
            .catch(error => {
                console.error("Error:", error);
            });

        var provinceDropdown = document.getElementById("provinceDropdown");
        provinceDropdown.addEventListener("change", loadDistricts);

        var districtDropdown = document.getElementById("districtDropdown");
        districtDropdown.addEventListener("change", loadWards);
     </script>
</body>
</html>
@*
<html>
<head>
    <title>Google Maps Example</title>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIkw2datIu4EYiyedKQJ08DmMJnboVSqs"></script>
</head>
<body>
    <div id="map" style="width: 100%; height: 400px;"></div>
    <script>
        function initMap() {
            // Tạo một đối tượng bản đồ
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: YOUR_LATITUDE, lng: YOUR_LONGITUDE }, // Thay YOUR_LATITUDE và YOUR_LONGITUDE bằng vị trí mặc định
                zoom: 8 // Mức độ thu phóng mặc định
            });

            // Thêm đánh dấu (marker) cho vị trí mong muốn
            var marker = new google.maps.Marker({
                position: { lat: DESIRED_LATITUDE, lng: DESIRED_LONGITUDE }, // Thay DESIRED_LATITUDE và DESIRED_LONGITUDE bằng vị trí bạn muốn định vị
                map: map,
                title: 'Địa điểm đích'
            });
        }
        google.maps.event.addDomListener(window, 'load', initMap);
    </script>
</body>
</html>*@

